geom_bar(stat="identity", position="fill") +
labs(title = "Proporcion de personas fumadoras por region", x = "Region", y = "% de personas", fill = "Fumador")
# Podemos concluir que los costos de seguro medico en cada zonas son dependientes de la condicion de sus habitantes
# el promedio de precios elevados en cada ubicacion se debe a las condiciones medicas de las personas, ya que
# al tener mayor cantidad de personas obesas y personas fumadoras (o ambos), el costo del seguro medico de estas personas
# será mayor, por lo que se podra observar que la relacion entre los gastos por ubicacion geografica, se deben al
# bmi y la condicion de fumadores,
#
#Grafico de barras de promedio de gastos por region 1
ggplot(data=df_cost, aes(x=region, y=mean_charges, fill = region), alpha=0.5)+
geom_bar(stat="identity", position="dodge")+
labs(title="Promedio del costo de seguro médico por zona", y="Costo de seguro médico", x="Región")
ggplot(df, aes(x = charges, y = region, fill = salud, alpha = 0.5)) +
geom_density_ridges() + labs(x = "Costo de seguro medico (USD)", y = "Region",
color = "Grupo de salud", title = "Distincion de 4 grandes grupos por region")
ggplot(df, aes(x = charges, y = region, fill = salud, alpha = 0.5)) +
geom_density_ridges() + labs(x = "Costo de seguro medico (USD)", y = "Region",
fill = "Grupo de salud", title = "Distincion de 4 grandes grupos por region")
ggplot(df, aes(x = charges, y = region, fill = salud, alpha = 0.5)) +
geom_density_ridges() + labs(x = "Costo de seguro medico (USD)", y = "Region",
fill = "Grupo de salud", title = "Distincion de 4 grandes grupos por region",
subtitle = "Dependiendo de su grupo de salud en funcion de sus gastos")
#Vemos cantidad total de fumadores obesos por region.
ggplot(df_cost_bs, aes(x = reorder(region,cantidad), y = cantidad, fill = region)) +
geom_bar(stat="identity", position="dodge") +
labs(title = "Cantidad de Fumadores obesos por region", x = "Region", y = "Cantidad de personas", fill = "Region")
#Vemos cantidad total de fumadores obesos por region.
ggplot(df_cost_bs, aes(x = reorder(region,cantidad, decreasing = TRUE), y = cantidad, fill = region)) +
geom_bar(stat="identity", position="dodge") +
labs(title = "Cantidad de Fumadores obesos por region", x = "Region", y = "Cantidad de personas", fill = "Region")
#Grafico de barras de promedio de gastos por region 1
ggplot(data=df_cost, aes(x=reorder(region, mean_charges, decreasing = TRUE), y=mean_charges, fill = region), alpha=0.5)+
geom_bar(stat="identity", position="dodge")+
labs(title="Promedio del costo de seguro médico por zona", y="Costo de seguro médico", x="Región")
#Grafico de barras de promedio de gastos por region 1
ggplot(data=df_cost, aes(x=reorder(region, mean_charges, decreasing = F), y=mean_charges, fill = region), alpha=0.5)+
geom_bar(stat="identity", position="dodge")+
labs(title="Promedio del costo de seguro médico por zona", y="Costo de seguro médico", x="Región")
TRUE
#Grafico de barras de promedio de gastos por region 1
ggplot(data=df_cost, aes(x=reorder(region, mean_charges, decreasing = TRUE), y=mean_charges, fill = region), alpha=0.5)+
geom_bar(stat="identity", position="dodge")+
labs(title="Promedio del costo de seguro médico por zona", y="Costo de seguro médico", x="Región")
library(tidyverse)
library(ggridges)
library(modelr)
library(ggplot2)
df <- read_csv('C:/Users/matia/downloads/insurance.csv', locale = locale(decimal_mark = ","))
glimpse(df)
problems(df)
#Vemos sexos y regiones disponibles
unique(df$sex)
unique(df$region)
#Quito repetidos si hay
df <- unique(df)
#Cambio los tipos de los datos y redondeamos bmi
df$sex = as.factor(df$sex)
df$smoker = as.factor(df$smoker)
df$region = as.factor(df$region)
df$bmi = round(df$bmi, digits = 0)
glimpse(df)
#Nos fijamos si NA y NaN
df %>%
summarise(cant=n(),
na_edad=sum(is.na(age)),
nan_edad=sum(is.nan(age)),
na_sex=sum(is.na(sex)),
na_smoker=sum(is.na(smoker)),
na_region=sum(is.na(region)),
na_charges=sum(is.na(charges)),
nan_charges=sum(is.nan(charges)))
view(df)
#Coste de seguro medico por zona
ggplot(data=df) +
geom_violin(aes(x=charges, y=region), alpha=0.5) +
labs(title="Costo de seguro medico por zona",
y="Region", x="Costo de seguro médico(USD)") + xlim(0,50000)
#Nos fijamos por zona y por condicion de fumador
df_cost_s <- df %>%
group_by(region, smoker) %>%
summarise(mean_charges = mean(charges, na.rm = TRUE),
median_charges = median(charges, na.rm =TRUE),
cantidad = n())
view(df_cost_s)
#Grafico de barras para ver gastos dependiendo de fumadores y no fumadores 2
ggplot(df_cost_s, aes(x = region, y = median_charges, fill = smoker)) +
geom_bar(position = "dodge", stat="identity") +
labs(title = "Distribucion de gastos por region",
y="Mediana de cargos", x = "Region", subtitle = "Discriminado por condicion de fumador",
fill = "Fumador")
#Grafico de densidad de gastos y fumador 3
ggplot(df, aes(x = charges, y = region, fill = smoker)) +
geom_density_ridges() +
labs(title = "Distribucion de gastos por region",
y="Region", x = "Cargos", subtitle = "Discriminado por condicion de fumador",
fill = "Fumador") + xlim(0,60000)
#Grafico de barras de promedio de gastos por region 1
ggplot(data=df_cost, aes(x=reorder(region, mean_charges, decreasing = TRUE), y=mean_charges, fill = region), alpha=0.5)+
geom_bar(stat="identity", position="dodge")+
labs(title="Promedio del costo de seguro médico por zona", y="Costo de seguro médico", x="Región")
#Cantidad de fumadores en zona %
ggplot(data=df_cost_s,aes(x = reorder(region, cantidad, decreasing=FALSE), y = cantidad, fill = smoker)) +
geom_bar(position="fill", stat="identity") +
labs(title="Relación de fumadores y no fumadores por zona", x="Zona", y="Proporcion de fumadores y no fumadores", fill="Fumador")
#Me fijo si el bmi y ser fumador afecta
df <- mutate(df,
salud = case_when((bmi >= 30 & smoker == 'yes') ~ 'Obeso y fumador',
(bmi >= 30 & smoker == 'no') ~ 'Obeso',
(bmi < 30 & smoker == 'yes') ~ 'Fumador',
(bmi < 30 & smoker == 'no') ~ 'Saludable'))
view(df)
#Scatter que muestra 4 grandes grupos dividiso por precio
ggplot(df, aes(x = charges, y = bmi, color = salud, size = age, alpha = 0.5)) +
geom_point() + labs(title= "Grupos de salud y sus gastos",
subtitle = "Discriminado por Edad", x = "Cargos medicos(USD)", y = "BMI")
#Scatter que muestra que ser fumador y obeso aumenta los gastos del seguro medico
ggplot(df, aes(x = age, y = charges, color = salud, alpha = 0.5)) +
geom_point(size = 6) + labs(title = "Distincion de Gastos por grupo de salud",
subtitle = "En base a su edad", x = "Edad", y = "Costo Medico(USD)",
color = "Grupo de salud", alpha = "")
ggplot(df, aes(x = charges, y = region, fill = salud, alpha = 0.5)) +
geom_density_ridges() + labs(x = "Costo de seguro medico (USD)", y = "Region",
fill = "Grupo de salud", title = "Distincion de 4 grandes grupos por region",
subtitle = "Dependiendo de su grupo de salud en funcion de sus gastos")
#Df de solo fumadores obesos.
df_obs_smok <- df %>%
group_by(region, salud) %>%
summarise(mean_charges = mean(charges, na.rm = TRUE),
median_charges = median(charges, na.rm =TRUE),
cantidad = n()) %>%
filter(salud == "Obeso y fumador")
view(df_obs_smok)
#Vemos cantidad total de fumadores obesos por region.
ggplot(df_cost_bs, aes(x = reorder(region,cantidad, decreasing = TRUE), y = cantidad, fill = region)) +
geom_bar(stat="identity", position="dodge") +
labs(title = "Cantidad de Fumadores obesos por region", x = "Region", y = "Cantidad de personas", fill = "Region")
#DF de solo obesos
df_obesos <- mutate(df,
salud = case_when((bmi >= 30 ) ~ 'Obeso',
(bmi < 30 ) ~ 'Saludable'))
view(df)
#filtramos obesos por region
df_obesos <- df %>%
group_by(region, salud) %>%
summarise(mean_charges = mean(charges, na.rm = TRUE),
median_charges = median(charges, na.rm =TRUE),
cantidad = n()) %>%
view(df_obesos)
#Proporcion de obesidad por region
ggplot(df_obesos, aes(x = reorder(region,cantidad, decreasing = TRUE), y = cantidad, fill = salud)) +
geom_bar(stat="identity", position="fill") +
labs(title = "Proporcion de personas obesas por region", x = "Region", y = "% de personas", fill = "Salud")
#Cantidad de obesos por region
ggplot(df_obesos, aes(x = reorder(region,cantidad, decreasing = TRUE), y = cantidad, fill = region)) +
geom_bar(stat="identity", position="dodge") +
labs(title = "Cantidad de personas obesas por region", x = "Region", y = "Cantidad de personas", fill = "Region")
#df solo de fumadores
df_smoker_yes <-  filter(df_cost_s, smoker == "yes")
view(df_cost_s)
#Cantidad de fumadores por region
ggplot(df_smoker_yes, aes(x = reorder(region,cantidad, decreasing = TRUE), y = cantidad, fill = region)) +
geom_bar(stat="identity", position="dodge") +
labs(title = "Cantidad de personas fumadoras por region", x = "Region", y = "Cantidad de personas", fill = "Region")
#Proporcion de fumadores por region
ggplot(df_cost_s, aes(x = reorder(region,cantidad, decreasing = F), y = cantidad, fill = smoker)) +
geom_bar(stat="identity", position="fill") +
labs(title = "Proporcion de personas fumadoras por region", x = "Region", y = "% de personas", fill = "Fumador")
# Podemos concluir que los costos de seguro medico en cada zonas son dependientes de la condicion de sus habitantes
# el promedio de precios elevados en cada ubicacion se debe a las condiciones medicas de las personas, ya que
# al tener mayor cantidad de personas obesas y personas fumadoras (o ambos), el costo del seguro medico de estas personas
# será mayor, por lo que se podra observar que la relacion entre los gastos por ubicacion geografica, se deben al
# bmi y la condicion de fumadores,
#
library(tidyverse)
library(modelr)
library(nycflights13)
library(ggridges)
library(ggplot2)
df_2 <- flights %>% filter(carrier == "YV")
mod2 <- lm(arr_delay ~ dep_delay + hour, data = df_2)
df_2 <- add_predictions(df_2, mod2)
df_2 <- add_residuals(df_2, mod2)
summary(mod2)
+ geom_line(aes(dep_delay, pred), color = "red", size = 1.2) +
theme(title=element_text(size=14,face="bold")
x = "Retraso de salida", y = "Retraso de llegada", subtitle = "") +
ggplot(df_2) + geom_point( aes(x=dep_delay, y=arr_delay)) +
geom_line(aes(dep_delay, pred), color = "red", size = 1.2) +
labs(title = "Relacion lineal en la prediccion de retraso de vuelos",
x = "Retraso de salida", y = "Retraso de llegada") +
theme(title=element_text(size=14,face="bold"))
library(ggplot2)
library(tidyverse)
library(modelr)
library(lubridate)
setwd("/home/datascience/Escritorio/TPFINALICD/Datasets")
setwd("/Users/matia/ICD/Datasets")
library(ggplot2)
library(tidyverse)
library(modelr)
library(lubridate)
setwd("/Users/matia/ICD/Datasets")
autosenero2018 <- read.csv("dnrpa-robos-recuperos-autos-201801.csv")
autosfebrero2018  <- read.csv("dnrpa-robos-recuperos-autos-201802.csv")
autosmarzo2018 <- read.csv("dnrpa-robos-recuperos-autos-201803.csv")
autosabril2018 <- read.csv("dnrpa-robos-recuperos-autos-201804.csv")
autosmayo2018 <- read.csv("dnrpa-robos-recuperos-autos-201805.csv")
autosjunio2018 <- read.csv("dnrpa-robos-recuperos-autos-201806.csv")
autosjulio2018 <- read.csv("dnrpa-robos-recuperos-autos-201807.csv")
autosagosto2018 <- read.csv("dnrpa-robos-recuperos-autos-201808.csv")
autosseptiembre2018 <- read.csv("dnrpa-robos-recuperos-autos-201809.csv")
autosoctubre2018 <- read.csv("dnrpa-robos-recuperos-autos-201810.csv")
autosnoviembre2018 <- read.csv("dnrpa-robos-recuperos-autos-201811.csv")
autosdiciembre2018 <- read.csv("dnrpa-robos-recuperos-autos-201812.csv")
autosenero2019 <- read.csv("dnrpa-robos-recuperos-autos-201901.csv")
autosfebrero2019  <- read.csv("dnrpa-robos-recuperos-autos-201902.csv")
autosmarzo2019 <- read.csv("dnrpa-robos-recuperos-autos-201903.csv")
autosabril2019 <- read.csv("dnrpa-robos-recuperos-autos-201904.csv")
autosmayo2019 <- read.csv("dnrpa-robos-recuperos-autos-201905.csv")
autosjunio2019 <- read.csv("dnrpa-robos-recuperos-autos-201906.csv")
autosjulio2019 <- read.csv("dnrpa-robos-recuperos-autos-201907.csv")
autosagosto2019 <- read.csv("dnrpa-robos-recuperos-autos-201908.csv")
autosseptiembre2019 <- read.csv("dnrpa-robos-recuperos-autos-201909.csv")
autosoctubre2019 <- read.csv("dnrpa-robos-recuperos-autos-201910.csv")
autosnoviembre2019 <- read.csv("dnrpa-robos-recuperos-autos-201911.csv")
autosdiciembre2019 <- read.csv("dnrpa-robos-recuperos-autos-201912.csv")
autos2018 <- rbind(autosenero2018, autosfebrero2018, autosabril2018, autosmayo2018,
autosjunio2018,autosjulio2018, autosagosto2018, autosseptiembre2018,
autosoctubre2018, autosnoviembre2018, autosdiciembre2018)
autos2018 <- autos2018[,!names(autos2018) %in% c("titular_pais_nacimiento_indec_id")]
glimpse(autos2018)
autos2019 <- rbind(autosenero2019, autosfebrero2019, autosmarzo2019)
autos2019 <- autos2019[,!names(autos2019) %in% c("titular_domicilio_provincia_indec_id", "titular_pais_nacimiento_indec_id")]
glimpse(autos2019)
autos2019sucio <- rbind(autosmayo2019,
autosjunio2019,autosjulio2019, autosagosto2019, autosseptiembre2019,
autosoctubre2019, autosnoviembre2019, autosdiciembre2019)
autos2019sucio <- autos2019sucio[,!names(autos2019sucio) %in% c("titular_domicilio_provincia_id", "titular_pais_nacimiento_id")]
glimpse(autos2019sucio)
autos2019 <- rbind(autos2019, autos2019sucio)
autosagosto2022<- read.csv("dnrpa-robos-recuperos-autos-202208.csv")
autosenero2022<-read.csv("dnrpa-robos-recuperos-autos-202201.csv")
autosfebrero2022<-read.csv("dnrpa-robos-recuperos-autos-202202.csv")
autosmarzo2022<-read.csv("dnrpa-robos-recuperos-autos-202203.csv")
autosabril2022<-read.csv("dnrpa-robos-recuperos-autos-202204.csv")
autosmayo2022<-read.csv("dnrpa-robos-recuperos-autos-202205.csv")
autosjunio2022<-read.csv("dnrpa-robos-recuperos-autos-202206.csv")
autosjulio2022<-read.csv("dnrpa-robos-recuperos-autos-202207.csv")
#importo datasets del 2020
autosenero2020<-read.csv("dnrpa-robos-recuperos-autos-202001.csv")
autosfebrero2020<-read.csv("dnrpa-robos-recuperos-autos-202002.csv")
autosmarzo2020<-read.csv("dnrpa-robos-recuperos-autos-202003.csv")
autosabril2020<-read.csv("dnrpa-robos-recuperos-autos-202004.csv")
autosmayo2020<-read.csv("dnrpa-robos-recuperos-autos-202005.csv")
autosjunio2020<-read.csv("dnrpa-robos-recuperos-autos-202006.csv")
autosjulio2020<-read.csv("dnrpa-robos-recuperos-autos-202007.csv")
autosagosto2020<- read.csv("dnrpa-robos-recuperos-autos-202008.csv")
autosseptiembre2020<- read.csv("dnrpa-robos-recuperos-autos-202009.csv")
autosoctubre2020<- read.csv("dnrpa-robos-recuperos-autos-202010.csv")
autosnoviembre2020<- read.csv("dnrpa-robos-recuperos-autos-202011.csv")
autosdiciembre2020<- read.csv("dnrpa-robos-recuperos-autos-202012.csv")
autos2022<-rbind(autosenero2022, autosfebrero2022)
view(autos2022)
autos2022<-rbind(autos2022,autosagosto2022)
autos2020<-rbind(autosenero2020,autosfebrero2020,autosmarzo2020,autosabril2020,autosmayo2020,
autosjunio2020,autosjulio2020,autosagosto2020,autosseptiembre2020,autosnoviembre2020,autosdiciembre2020)
view(autos2020)
problems(autos)
autos_robos2018 <- autos2018 %>% group_by(registro_seccional_descripcion) %>%
filter(tramite_tipo == "DENUNCIA DE ROBO O HURTO / RETENCION INDEBIDA")
comisarias2018 <- autos_robos2018 %>%
mutate(cantidad = n())
unique(comisarias$registro_seccional_descripcion)
autos_robos2018 <- autos2018 %>% group_by(registro_seccional_descripcion) %>%
filter(tramite_tipo == "DENUNCIA DE ROBO O HURTO / RETENCION INDEBIDA")
comisarias2018 <- autos_robos2018 %>%
mutate(cantidad = n())
unique(comisarias2018$registro_seccional_descripcion)
comisarias2018 <- comisarias2018 %>% ungroup() %>%
summarise(codigo_comisaria = comisarias2020$registro_seccional_codigo,
nombre_comisaria = comisarias2020$registro_seccional_descripcion,
cantidad_robos = cantidad) %>%
mutate(porcentaje = cantidad_robos/3.198)
autos_robos2018 <- autos2018 %>% group_by(registro_seccional_descripcion) %>%
filter(tramite_tipo == "DENUNCIA DE ROBO O HURTO / RETENCION INDEBIDA")
comisarias2018 <- autos_robos2018 %>%
mutate(cantidad = n())
unique(comisarias2018$registro_seccional_descripcion)
comisarias2018 <- comisarias2018 %>% ungroup() %>%
summarise(codigo_comisaria = comisarias2018$registro_seccional_codigo,
nombre_comisaria = comisarias2018$registro_seccional_descripcion,
cantidad_robos = cantidad) %>%
mutate(porcentaje = cantidad_robos/3.198)
comisarias2018 <- unique(comisarias2018)
view(comisarias2018)
library(ggplot2)
library(tidyverse)
library(modelr)
library(lubridate)
setwd("/Users/matia/ICD/Datasets")
autosenero2018 <- read.csv("dnrpa-robos-recuperos-autos-201801.csv")
autosfebrero2018  <- read.csv("dnrpa-robos-recuperos-autos-201802.csv")
autosmarzo2018 <- read.csv("dnrpa-robos-recuperos-autos-201803.csv")
autosabril2018 <- read.csv("dnrpa-robos-recuperos-autos-201804.csv")
autosmayo2018 <- read.csv("dnrpa-robos-recuperos-autos-201805.csv")
autosjunio2018 <- read.csv("dnrpa-robos-recuperos-autos-201806.csv")
autosjulio2018 <- read.csv("dnrpa-robos-recuperos-autos-201807.csv")
autosagosto2018 <- read.csv("dnrpa-robos-recuperos-autos-201808.csv")
autosseptiembre2018 <- read.csv("dnrpa-robos-recuperos-autos-201809.csv")
autosoctubre2018 <- read.csv("dnrpa-robos-recuperos-autos-201810.csv")
autosnoviembre2018 <- read.csv("dnrpa-robos-recuperos-autos-201811.csv")
autosdiciembre2018 <- read.csv("dnrpa-robos-recuperos-autos-201812.csv")
autosenero2019 <- read.csv("dnrpa-robos-recuperos-autos-201901.csv")
autosfebrero2019  <- read.csv("dnrpa-robos-recuperos-autos-201902.csv")
autosmarzo2019 <- read.csv("dnrpa-robos-recuperos-autos-201903.csv")
autosabril2019 <- read.csv("dnrpa-robos-recuperos-autos-201904.csv")
autosmayo2019 <- read.csv("dnrpa-robos-recuperos-autos-201905.csv")
autosjunio2019 <- read.csv("dnrpa-robos-recuperos-autos-201906.csv")
autosjulio2019 <- read.csv("dnrpa-robos-recuperos-autos-201907.csv")
autosagosto2019 <- read.csv("dnrpa-robos-recuperos-autos-201908.csv")
autosseptiembre2019 <- read.csv("dnrpa-robos-recuperos-autos-201909.csv")
autosoctubre2019 <- read.csv("dnrpa-robos-recuperos-autos-201910.csv")
autosnoviembre2019 <- read.csv("dnrpa-robos-recuperos-autos-201911.csv")
autosdiciembre2019 <- read.csv("dnrpa-robos-recuperos-autos-201912.csv")
autos2018 <- rbind(autosenero2018, autosfebrero2018, autosabril2018, autosmayo2018,
autosjunio2018,autosjulio2018, autosagosto2018, autosseptiembre2018,
autosoctubre2018, autosnoviembre2018, autosdiciembre2018)
autos2018 <- autos2018[,!names(autos2018) %in% c("titular_pais_nacimiento_indec_id")]
glimpse(autos2018)
autos2019 <- rbind(autosenero2019, autosfebrero2019, autosmarzo2019)
autos2019 <- autos2019[,!names(autos2019) %in% c("titular_domicilio_provincia_indec_id", "titular_pais_nacimiento_indec_id")]
glimpse(autos2019)
autos2019sucio <- rbind(autosmayo2019,
autosjunio2019,autosjulio2019, autosagosto2019, autosseptiembre2019,
autosoctubre2019, autosnoviembre2019, autosdiciembre2019)
autos2019sucio <- autos2019sucio[,!names(autos2019sucio) %in% c("titular_domicilio_provincia_id", "titular_pais_nacimiento_id")]
glimpse(autos2019sucio)
autos2019 <- rbind(autos2019, autos2019sucio)
autosagosto2022<- read.csv("dnrpa-robos-recuperos-autos-202208.csv")
autosenero2022<-read.csv("dnrpa-robos-recuperos-autos-202201.csv")
autosfebrero2022<-read.csv("dnrpa-robos-recuperos-autos-202202.csv")
autosmarzo2022<-read.csv("dnrpa-robos-recuperos-autos-202203.csv")
autosabril2022<-read.csv("dnrpa-robos-recuperos-autos-202204.csv")
autosmayo2022<-read.csv("dnrpa-robos-recuperos-autos-202205.csv")
autosjunio2022<-read.csv("dnrpa-robos-recuperos-autos-202206.csv")
autosjulio2022<-read.csv("dnrpa-robos-recuperos-autos-202207.csv")
#importo datasets del 2020
autosenero2020<-read.csv("dnrpa-robos-recuperos-autos-202001.csv")
autosfebrero2020<-read.csv("dnrpa-robos-recuperos-autos-202002.csv")
autosmarzo2020<-read.csv("dnrpa-robos-recuperos-autos-202003.csv")
autosabril2020<-read.csv("dnrpa-robos-recuperos-autos-202004.csv")
autosmayo2020<-read.csv("dnrpa-robos-recuperos-autos-202005.csv")
autosjunio2020<-read.csv("dnrpa-robos-recuperos-autos-202006.csv")
autosjulio2020<-read.csv("dnrpa-robos-recuperos-autos-202007.csv")
autosagosto2020<- read.csv("dnrpa-robos-recuperos-autos-202008.csv")
autosseptiembre2020<- read.csv("dnrpa-robos-recuperos-autos-202009.csv")
autosoctubre2020<- read.csv("dnrpa-robos-recuperos-autos-202010.csv")
autosnoviembre2020<- read.csv("dnrpa-robos-recuperos-autos-202011.csv")
autosdiciembre2020<- read.csv("dnrpa-robos-recuperos-autos-202012.csv")
autos2022<-rbind(autosenero2022, autosfebrero2022)
view(autos2022)
autos2022<-rbind(autos2022,autosagosto2022)
autos2020<-rbind(autosenero2020,autosfebrero2020,autosmarzo2020,autosabril2020,autosmayo2020,
autosjunio2020,autosjulio2020,autosagosto2020,autosseptiembre2020,autosnoviembre2020,autosdiciembre2020)
view(autos2020)
problems(autos)
#2018
autos_robos2018 <- autos2018 %>% group_by(registro_seccional_descripcion) %>%
filter(tramite_tipo == "DENUNCIA DE ROBO O HURTO / RETENCION INDEBIDA")
comisarias2018 <- autos_robos2018 %>%
mutate(cantidad = n())
unique(comisarias2018$registro_seccional_descripcion)
view(comisarias2018)
#2018
autos_robos2018 <- autos2018 %>% group_by(registro_seccional_descripcion) %>%
filter(tramite_tipo == "DENUNCIA DE ROBO O HURTO / RETENCION INDEBIDA")
comisarias2018 <- autos_robos2018 %>%
mutate(cantidad = n())
view(comisarias2018)
#2018
view(autos2018)
autos_robos2018 <- autos2018 %>% group_by(registro_seccional_descripcion) %>%
filter(tramite_tipo == "DENUNCIA DE ROBO O HURTO / RETENCION INDEBIDA")
view(autos_robos2018)
#2018
view(autos2018)
autos_robos2018 <- autos2018 %>% group_by(registro_seccional_descripcion) %>%
filter(tramite_tipo == "DENUNCIA DE ROBO O HURTO")
view(autos_robos2018)
comisarias2018 <- autos_robos2018 %>%
mutate(cantidad = n())
view(comisarias2018)
unique(comisarias2018$registro_seccional_descripcion)
view(comisarias2018)
comisarias2018 <- comisarias2018 %>% ungroup() %>%
summarise(codigo_comisaria = comisarias2018$registro_seccional_codigo,
nombre_comisaria = comisarias2018$registro_seccional_descripcion,
cantidad_robos = cantidad) %>%
mutate(porcentaje = cantidad_robos/3.198)
comisarias2018 <- unique(comisarias2018)
view(comisarias2018)
#2018
view(autos2018)
comisarias2018 <- comisarias2018 %>% ungroup() %>%
summarise(codigo_comisaria = comisarias2018$registro_seccional_codigo,
nombre_comisaria = comisarias2018$registro_seccional_descripcion,
cantidad_robos = cantidad) %>%
mutate(porcentaje = cantidad_robos/33.787) #33,787 numero de autos robados en el año
comisarias2018 <- comisarias2018 %>% ungroup() %>%
summarise(codigo_comisaria = comisarias2018$registro_seccional_codigo,
nombre_comisaria = comisarias2018$registro_seccional_descripcion,
cantidad_robos = cantidad) %>%
mutate(porcentaje = cantidad_robos/33.787) #33,787 numero de autos robados en el año
autos_robos2018 <- autos2018 %>% group_by(registro_seccional_descripcion) %>%
filter(tramite_tipo == "DENUNCIA DE ROBO O HURTO")
comisarias2018 <- autos_robos2018 %>%
mutate(cantidad = n())
unique(comisarias2018$registro_seccional_descripcion)
comisarias2018 <- comisarias2018 %>% ungroup() %>%
summarise(codigo_comisaria = comisarias2018$registro_seccional_codigo,
nombre_comisaria = comisarias2018$registro_seccional_descripcion,
cantidad_robos = cantidad) %>%
mutate(porcentaje = cantidad_robos/33.787) #33,787 numero de autos robados en el año
comisarias2018 <- unique(comisarias2018)
view(comisarias2018)
#2019
view(autos2019)
autos_robos2019 <- autos2019 %>% group_by(registro_seccional_descripcion) %>%
filter(tramite_tipo == "DENUNCIA DE ROBO O HURTO")
comisarias2019 <- autos_robos2019 %>%
mutate(cantidad = n())
unique(comisarias2019$registro_seccional_descripcion)
comisarias2019 <- comisarias2019 %>% ungroup() %>%
summarise(codigo_comisaria = comisarias2019$registro_seccional_codigo,
nombre_comisaria = comisarias2019$registro_seccional_descripcion,
cantidad_robos = cantidad) %>%
mutate(porcentaje = cantidad_robos/33.787) #33,787 numero de autos robados en el año
comisarias2019 <- unique(comisarias2019)
view(comisarias2019)
autosenero2021<-read.csv("dnrpa-robos-recuperos-autos-202101.csv")
autosfebrero2021<-read.csv("dnrpa-robos-recuperos-autos-202102.csv")
autosmarzo2021<-read.csv("dnrpa-robos-recuperos-autos-202103.csv")
autosabril2021<-read.csv("dnrpa-robos-recuperos-autos-202104.csv")
autosmayo2021<-read.csv("dnrpa-robos-recuperos-autos-202105.csv")
autosjunio2021<-read.csv("dnrpa-robos-recuperos-autos-202106.csv")
autosjulio2021<-read.csv("dnrpa-robos-recuperos-autos-202107.csv")
autosagosto2021<- read.csv("dnrpa-robos-recuperos-autos-202108.csv")
autosseptiembre2021<- read.csv("dnrpa-robos-recuperos-autos-202109.csv")
autosoctubre2021<- read.csv("dnrpa-robos-recuperos-autos-202110.csv")
autosnoviembre2021<- read.csv("dnrpa-robos-recuperos-autos-202111.csv")
autosdiciembre2021<- read.csv("dnrpa-robos-recuperos-autos-202112.csv")
autos2021<-rbind(autosenero2021,autosfebrero2021,autosmarzo2021,autosabril2021,autosmayo2021,
autosjunio2021,autosjulio2021,autosagosto2021,autosseptiembre2021,
autosnoviembre2021,autosdiciembre2021)
view(autos2018)
autos_robos2018 <- autos2018 %>% group_by(registro_seccional_descripcion) %>%
filter(tramite_tipo == "DENUNCIA DE ROBO O HURTO")
view(autos_robos2018)
comisarias2018 <- autos_robos2018 %>%
mutate(cantidad = n())
unique(comisarias2018$registro_seccional_descripcion)
view(comisarias2018)
comisarias2018 <- comisarias2018 %>% ungroup() %>%
summarise(codigo_comisaria = comisarias2018$registro_seccional_codigo,
nombre_comisaria = comisarias2018$registro_seccional_descripcion,
cantidad_robos = cantidad) %>%
mutate(porcentaje = cantidad_robos/33.787) #33,787 numero de autos robados en el año
comisarias2018 <- unique(comisarias2018)
view(comisarias2018)
#2019
view(autos2019)
autos_robos2019 <- autos2019 %>% group_by(registro_seccional_descripcion) %>%
filter(tramite_tipo == "DENUNCIA DE ROBO O HURTO")
comisarias2019 <- autos_robos2019 %>%
mutate(cantidad = n())
unique(comisarias2019$registro_seccional_descripcion)
comisarias2019 <- comisarias2019 %>% ungroup() %>%
summarise(codigo_comisaria = comisarias2019$registro_seccional_codigo,
nombre_comisaria = comisarias2019$registro_seccional_descripcion,
cantidad_robos = cantidad) %>%
mutate(porcentaje = cantidad_robos/33.683) #33,787 numero de autos robados en el año
comisarias2019 <- unique(comisarias2019)
view(comisarias2019)
#2021
view(autos2021)
autos_robos2021 <- autos2021 %>% group_by(registro_seccional_descripcion) %>%
filter(tramite_tipo == "DENUNCIA DE ROBO O HURTO")
comisarias2021 <- autos_robos2021 %>%
mutate(cantidad = n())
autos_robos2021 <- autos2021 %>% group_by(registro_seccional_descripcion) %>%
filter(tramite_tipo == "DENUNCIA DE ROBO O HURTO")
comisarias2021 <- autos_robos2021 %>%
mutate(cantidad = n())
unique(comisarias2021$registro_seccional_descripcion)
autos_robos2021 <- autos2021 %>% group_by(registro_seccional_descripcion) %>%
filter(tramite_tipo == "DENUNCIA DE ROBO O HURTO")
view(autos_robos2021)
autos_robos2021 <- autos2021 %>% group_by(registro_seccional_descripcion) %>%
filter(tramite_tipo == "DENUNCIA DE ROBO O HURTO / RETENCION INDEBIDA")
autos_robos2021 <- autos2021 %>% group_by(registro_seccional_descripcion) %>%
filter(tramite_tipo == "DENUNCIA DE ROBO O HURTO / RETENCION INDEBIDA")
view(autos_robos2021)
comisarias2021 <- autos_robos2021 %>%
mutate(cantidad = n())
unique(comisarias2021$registro_seccional_descripcion)
comisarias2021 <- comisarias2021 %>% ungroup() %>%
summarise(codigo_comisaria = comisarias2021$registro_seccional_codigo,
nombre_comisaria = comisarias2021$registro_seccional_descripcion,
cantidad_robos = cantidad) %>%
mutate(porcentaje = cantidad_robos/30.074) #33,787 numero de autos robados en el año
comisarias2021 <- unique(comisarias2021)
view(comisarias2021)
